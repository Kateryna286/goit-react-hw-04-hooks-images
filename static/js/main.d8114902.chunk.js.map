{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","onSubmit","useState","querry","setQuerry","resetForm","className","event","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","name","value","onChange","target","ImageGalleryItem","bigImgSrc","src","alt","ImageGallery","images","onClick","map","webformatURL","user","id","largeImageURL","Button","Modal","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","currentTarget","fetchImages","a","page","key","axios","get","response","data","App","setImages","setPage","showModal","setShowModal","showButton","setShowButton","loading","setLoading","status","setStatus","error","setError","setBigImgSrc","then","total","prevImages","hits","smoothScroll","scrollTo","top","document","documentElement","scrollHeight","behavior","toggleModal","dataset","color","height","width","prevPage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d8114902.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Searchbar.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [querry, setQuerry] = useState('');\n\n  const handleChange = event => {\n    setQuerry(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (querry.trim() === '') {\n      alert('Введите ключевое слово');\n      return;\n    }\n\n    onSubmit(querry);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setQuerry('');\n  };\n\n  return (\n    <>\n      <header className=\"Searchbar\">\n        <form onSubmit={handleSubmit} className=\"SearchForm\">\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            name=\"keyWord\"\n            value={querry}\n            onChange={handleChange}\n          />\n        </form>\n      </header>\n    </>\n  );\n}\n","import './ImageGalleryItem.css';\n\nexport default function ImageGalleryItem({ bigImgSrc, src, alt }) {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={src}\n        alt={alt}\n        data-src={bigImgSrc}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n}\n","import './ImageGallery.css';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\nexport default function ImageGallery({ images, onClick }) {\n  return (\n    <>\n      {images && (\n        <ul className=\"ImageGallery\" onClick={onClick}>\n          {images.map(({ webformatURL, user, id, largeImageURL }) => (\n            <ImageGalleryItem\n              src={webformatURL}\n              alt={user}\n              key={id}\n              bigImgSrc={largeImageURL}\n            />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport './Button.css';\n\nfunction Button({ onClick }) {\n  return (\n    <button onClick={onClick} type=\"button\" className=\"Button\">\n      Load more...\n    </button>\n  );\n}\n\nexport default Button;\n","import React, { useEffect } from 'react';\nimport './Modal.css';\n\nexport default function Modal({ src, alt, onClose }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return (\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\n      <div className=\"Modal\">\n        <img src={src} alt={alt} />\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Loader from 'react-loader-spinner';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\nimport './App.css';\n\nconst fetchImages = async ({\n  querry = '',\n  page = 1,\n  key = '22564694-3177f5daba1f2572eee652a36',\n} = {}) => {\n  const response = await axios.get(\n    `https://pixabay.com/api/?q=${querry}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`,\n  );\n  return response.data;\n};\n\nexport default function App() {\n  const [querry, setQuerry] = useState('');\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [showButton, setShowButton] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n  const [bigImgSrc, setBigImgSrc] = useState('');\n\n  useEffect(() => {\n    if (querry === '') {\n      return;\n    }\n\n    setLoading(true);\n\n    fetchImages({ querry, page })\n      .then(response => {\n        if (response.total === 0) {\n          setStatus('rejected');\n          setError(`Картинок по поиску '${querry}' не обнаружено`);\n          setLoading(false);\n        } else {\n          setImages(prevImages => [...prevImages, ...response.hits]);\n          setLoading(false);\n          setStatus('resolved');\n\n          if (response.total - 12 * page > 0) {\n            setShowButton(true);\n          } else {\n            setShowButton(false);\n          }\n        }\n      })\n      .then(page > 1 && smoothScroll);\n  }, [querry, page]);\n\n  const smoothScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  const hundleButtonClick = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const formSubmitHandler = data => {\n    setQuerry(data);\n    setPage(1);\n    setImages([]);\n  };\n\n  function onClickGallery(event) {\n    setBigImgSrc(event.target.dataset.src);\n    toggleModal();\n  }\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={formSubmitHandler} />\n      {status === 'idle' && <div>Начните поиск</div>}\n      {status === 'rejected' && <div>{error}</div>}\n      <ImageGallery querry={querry} onClick={onClickGallery} images={images} />\n      {loading && <Loader type=\"Oval\" color=\"#00BFFF\" height={80} width={80} />}\n      {showButton && <Button onClick={hundleButtonClick} />}\n      {showModal && <Modal onClose={toggleModal} src={bigImgSrc} />}\n    </div>\n  );\n}\n\n//my key 22564694-3177f5daba1f2572eee652a36;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}